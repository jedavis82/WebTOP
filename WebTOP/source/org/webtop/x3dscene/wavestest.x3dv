#X3D V3.0 utf8
PROFILE Immersive

#########################################################################################
## This file used for WavesTest.java is for dynamic widget allocation testing purposes ##
#########################################################################################


######START NAV PANEL######
EXTERNPROTO NavLight[ inputOutput SFFloat ambientIntensity
								 inputOutput SFFloat intensity
								 inputOutput SFColor color
								 inputOutput SFVec3f attenuation
								 inputOutput SFBool headlight
								 inputOutput MFFloat avatarSize
								 inputOutput SFFloat navigationSpeed
								 inputOutput MFString navigationType
								 inputOutput SFFloat visibilityLimit ]
"x3dlib/NavPanel.x3dv#NavLight"

EXTERNPROTO NavigationPanel [
	inputOutput SFBool enabled

	initializeOnly			SFBool visible
	inputOnly		SFBool set_visible
	outputOnly	SFBool visible_changed

	inputOutput MFNode children

	inputOutput SFVec3f center

	initializeOnly		 MFFloat		views
	initializeOnly		 SFInt32		activeView

	initializeOnly		 SFFloat		rotation_speed
	initializeOnly		 SFFloat		translation_speed

	#External (EAI) control of the view
	inputOnly	 SFVec2f		set_angles
	inputOnly	 SFVec2f		set_pan
	inputOnly	 SFFloat		set_zoom
	inputOnly	 MFFloat		set_view
	inputOnly	 SFInt32		set_activeView

	#External (EAI) information on the view
	outputOnly SFBool			isActive_out
	outputOnly SFBool			isOver_out
	outputOnly SFBool			rotation_isOver_out
	outputOnly SFBool			rotation_isActive_out
	outputOnly SFBool			pan_isOver_out
	outputOnly SFBool			pan_isActive_out
	outputOnly SFBool			zoom_isOver_out
	outputOnly SFBool			zoom_isActive_out
	outputOnly SFBool			switch_isOver_out
	outputOnly SFBool			switch_isActive_out
	outputOnly SFVec2f		angles_changed
	outputOnly SFVec2f		pan_changed
	outputOnly SFFloat		zoom_changed

	#activeView_changed events are always sent before the corresponding
	#view_changed events to allow a client to determine the reason for a
	#viewpoint change.
	outputOnly MFFloat		view_changed
	outputOnly SFInt32		activeView_changed ]
"x3dlib/NavPanel.x3dv#NavigationPanel"


NavLight { navigationType "NONE" }

######END NAV PANEL######


#####################################################
## POOL PROTO PREVIOUSLY WRITTEN IN POOL.java      ##
#####################################################

PROTO Pool [ initializeOnly        SFInt32 resolution 50
             initializeOnly        SFFloat spacing 2
             initializeOnly        MFFloat height []
             initializeOnly        SFInt32 sparse_resolution 25
             initializeOnly        SFFloat sparse_spacing 4
             initializeOnly        MFFloat sparse_height []
             initializeOnly        SFBool  sparse FALSE
             initializeOnly        SFBool  normalPerVertex TRUE
             initializeOnly        SFVec3f translation 0 0 0
             inputOnly      MFFloat set_height
             inputOnly      MFFloat set_sparse_height
             inputOnly      SFBool  set_sparse
]
{
  DEF Pool-TRANSFORM Transform {
    translation IS translation
    children [
      DEF Pool-SWITCH Switch {
        whichChoice 0
        choice [
          Shape {
            geometry ElevationGrid {
              normalPerVertex IS normalPerVertex
              solid TRUE
              creaseAngle 3.142
              height          IS height
              xDimension      IS resolution
              zDimension      IS resolution
              xSpacing        IS spacing
              zSpacing        IS spacing
              set_height      IS set_height
            }
            appearance DEF Pool-APPEARANCE Appearance {
              material Material {
                ambientIntensity 0.4
                #diffuseColor     0.7 0.7 1.0
                #diffuseColor     0.5 0.5 0.64
                diffuseColor 0.4 0.4 0.512
                specularColor    0.1 0.1 0.1
                emissiveColor    0.1 0.1 0.2
                #shininess 1.0
                transparency 0
              }
            }
          }
          Shape {
            geometry ElevationGrid {
              colorPerVertex  FALSE
              normalPerVertex IS normalPerVertex
              solid TRUE
              creaseAngle 3.142
              height          IS sparse_height
              xDimension      IS sparse_resolution
              zDimension      IS sparse_resolution
              xSpacing        IS sparse_spacing
              zSpacing        IS sparse_spacing
              set_height      IS set_sparse_height
            }
            appearance USE Pool-APPEARANCE
          }
        ]
      }
    ]
  }
  DEF Pool-SCRIPT Script {
    initializeOnly    SFBool  sparse IS sparse
    inputOnly  SFBool  set_sparse IS set_sparse
    outputOnly SFInt32 whichChoice
    url "ecmascript:
      function initialize() {
        if(sparse) whichChoice = 1;
        whichChoice = 0;
        mouse_clicked = new SFVec3f(0, 0, 0);
      }
      function set_sparse(value, time) {
        if(value) whichChoice = 1;
        else whichChoice = 0;
      }
    "
  }
  ROUTE Pool-SCRIPT.whichChoice TO Pool-SWITCH.whichChoice
}
#PROTO Pool [ initializeOnly        SFInt32 resolution 50
#             initializeOnly        SFFloat spacing 2
#             initializeOnly        MFFloat height []
#             initializeOnly        SFInt32 sparse_resolution 25
#             initializeOnly        SFFloat sparse_spacing 4
#             initializeOnly        MFFloat sparse_height []
#             initializeOnly        SFBool  sparse FALSE
#             initializeOnly        SFBool  normalPerVertex TRUE
#             initializeOnly        SFVec3f translation 0 0 0
#             initializeOnly        MFFloat rotation [] 
#             inputOnly      MFFloat set_height
#             inputOnly      MFFloat set_sparse_height
#             inputOnly      SFBool  set_sparse
#]
#{
#  DEF Pool-TRANSFORM Transform {
#    #translation IS translation
#    rotation 1 0 0 -1.57
#	translation -50 -50 0
#	
#    children [
#      DEF Pool-SWITCH Switch {
#        whichChoice 0
#        choice [
#          Shape {
#            geometry ElevationGrid {
#              normalPerVertex IS normalPerVertex
#              solid FALSE
#              creaseAngle 3.142
#              height          IS height
#              xDimension      IS resolution
#              zDimension      IS resolution
#              xSpacing        IS spacing
#              zSpacing        IS spacing
#              set_height      IS set_height
#            }
#            appearance DEF Pool-APPEARANCE Appearance {
#              material Material {
#                ambientIntensity 0.4
#                #diffuseColor     0.7 0.7 1.0
#                diffuseColor     0.2 0.2 0.24
#                specularColor    0.1 0.1 0.1
#                #emissiveColor    0.1 0.1 0.2
#                shininess        1.0
#                transparency     0
#              }
#            }
#          }
#          Shape {
#            geometry ElevationGrid {
#              colorPerVertex  FALSE
#              normalPerVertex IS normalPerVertex
#              solid TRUE
#              creaseAngle 3.142
#              height          IS sparse_height
#              xDimension      IS sparse_resolution
#              zDimension      IS sparse_resolution
#              xSpacing        IS sparse_spacing
#              zSpacing        IS sparse_spacing
#              set_height      IS set_sparse_height
#            }
#            appearance USE Pool-APPEARANCE
#          }
#        ]
#      }
#    ]
#  }
#  DEF Pool-SCRIPT Script {
#    initializeOnly    SFBool  sparse IS sparse
#    inputOnly  SFBool  set_sparse IS set_sparse
#    inputOnly SFInt32 whichChoice
#    url "ecmascript:
#      function initialize() {
#        if(sparse) whichChoice = 1;
#        whichChoice = 0;
#        mouse_clicked = new SFVec3f(0, 0, 0);
#      }
#      function set_sparse(value, time) {
#        if(value) whichChoice = 1;
#        else whichChoice = 0;
#      }
#	"
#  }
#  ROUTE Pool-SCRIPT.whichChoice TO Pool-SWITCH.whichChoice
#}
#####################################################
##		END POOL PROTO							   ##
#####################################################
#####################################################
## END PROTOS FROM WAVE SIMULATION FILE            ##
#####################################################

NavLight { navigationType "NONE" }
#NavigationInfo { type "NONE" } #disables x3d controls [JD]

NavLight { navigationType "NONE" }
			
			## To Remove xj3d Navigation Controls [JD] ##
			NavigationInfo {
				type "NONE"
			}



DEF NavPanel NavigationPanel {


views [
					-.77 0 0 0 .2 -15
					-.77 -.358 0 0 1.5 -12
					-1.57 0 0 0 .15 -12
                    -0.278 -1.575 0.0 -2.235E-8 -0.768 -12.984
                    -0.476 -2.269E-4 0.0 0.2 -0.067 -13.293
				]

translation_speed 10 	

children [
    DEF World Transform{}
    DEF Grid-SWITCH Switch {
				whichChoice 0
				choice [
					Group {
						children [
   						Group {
								children [
									DEF View-SENSOR ProximitySensor { size 100000 100000 100000 }
									Group {
										children [
											DEF Text-TRANSFORM1 Transform {
												translation -50 16 -50
												scale 5 5 1
												children Shape {
													appearance DEF Text-APPEARANCE Appearance {
														material Material {
															diffuseColor 0 0 0
															specularColor 0 0 0
															ambientIntensity 0
															emissiveColor 1 1 1
														}
													}
													geometry Text {
														fontStyle DEF Text-FONTSTYLE FontStyle {
															justify "MIDDLE"
														}
														string [ "(-50, 50)" ]
													}
												}
											}

											DEF Text-TRANSFORM2 Transform {
												translation -50 16 50
												scale 5 5 1
												children Shape {
													appearance USE Text-APPEARANCE
													geometry Text {
														fontStyle USE Text-FONTSTYLE
														string [ "(-50, -50)" ]
													}
												}
											}

											DEF Text-TRANSFORM3 Transform {
												translation 50 16 -50
												scale 5 5 1
												children Shape {
													appearance USE Text-APPEARANCE
													geometry Text {
														fontStyle USE Text-FONTSTYLE
														string [ "(50, 50)" ]
													}
												}
											}

											DEF Text-TRANSFORM4 Transform {
												translation 50 16 50
												scale 5 5 1
												children Shape {
													appearance USE Text-APPEARANCE
													geometry Text {
														fontStyle USE Text-FONTSTYLE
														string [ "(50, -50)" ]
													}
												}
											}
										]
									}
								]
							}

							Transform {
								translation 0 -10 0
								children Shape {
									appearance Appearance {
										material Material {
											diffuseColor 1 1 1
											emissiveColor 1 1 1
										}
									}
									geometry IndexedLineSet {
										coord Coordinate {
											point [ -50 0 -50, 50 0 -50, 50 0 50, -50 0 50,
												-25 0 -50, -25 0 50, 0 0 -50, 0 0 50, 25 0 -50, 25 0 50,
												-50 0 -25, 50 0 -25, -50 0 0, 50 0 0, -50 0 25, 50 0 25
												-50 20 -50, 50 20 -50, 50 20 50, -50 20 50 ]
										}
										colorPerVertex FALSE
										coordIndex [ 0 1 2 3 0 -1, 4 5 -1, 6 7 -1, 8 9 -1, 10 11 -1, 12 13 -1, 14 15 -1 0 16 -1 1 17 -1 2 18 -1 3 19 -1 ]
									}
								}
							}
						]
					}
				]
			}
            DirectionalLight {
					direction 0 1 0
					intensity 1
					color 1 1 1
					ambientIntensity 0.6
			}
	#will have to create and place pool using java code.  Look at 2 media.  May have to use pool from 2 media as well.


] #end navPanel Children #end navPanel group
}
